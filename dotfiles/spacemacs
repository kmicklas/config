(defun dotspacemacs/layers ()
  "Configuration Layers declaration.
You should not put any user code in this function besides modifying the variable
values."
  (setq-default
   dotspacemacs-configuration-layers
   '(
     helm
     auto-completion
     better-defaults

     markdown
     org

     shell-scripts
     (shell :variables
            shell-default-shell 'ansi-term
            shell-default-height 30
            shell-default-position 'bottom)

     version-control
     git

     emacs-lisp
     haskell
     rust
     nixos
     sql

     yaml
     csv

     javascript
     (go :variables go-tab-width 2)
     )
   dotspacemacs-additional-packages
   '(
     editorconfig
     evil-escape
     keyfreq
     )
   ))

(defun dotspacemacs/init ()
  "Initialization function.
This function is called at the very startup of Spacemacs initialization
before layers configuration.
You should not put any user code in there besides modifying the variable
values."
  (setq-default
   dotspacemacs-default-font '("Source Code Pro"
                               :size 22
                               :weight normal
                               :width normal
                               :powerline-scale 1)
   dotspacemacs-ex-command-key ";"
   dotspacemacs-remap-Y-to-y$ t
   dotspacemacs-auto-resume-layouts t
   dotspacemacs-enable-paste-transient-state t
   dotspacemacs-line-numbers t
   dotspacemacs-persistent-server t
   dotspacemacs-search-tools '("ag")
   ))

(defun dotspacemacs/user-init ()
  "Initialization function for user code.
It is called immediately after `dotspacemacs/init', before layer configuration
executes.
 This function is mostly useful for variables that need to be set
before packages are loaded. If you are unsure, you should try in setting them in
`dotspacemacs/user-config' first."
  )

(defun dotspacemacs/user-config ()
  "Configuration function for user code.
This function is called at the very end of Spacemacs initialization after
layers configuration.
This is the place where most of your configurations should be done. Unless it is
explicitly specified that a variable should be set before a package is loaded,
you should place your code here."
  (defun evil-paste-after-from-0 ()
    (interactive)
    (let ((evil-this-register ?0))
      (call-interactively 'evil-paste-after)))

  (define-key evil-visual-state-map "p" 'evil-paste-after-from-0)
  (define-key evil-normal-state-map (kbd "RET") 'newline-and-indent)
  (define-key evil-normal-state-map "." 'evil-window-next)
  (define-key evil-normal-state-map "f" 'evil-avy-goto-char)
  (define-key evil-normal-state-map "F" 'evil-avy-goto-char2)

  (define-key helm-map (kbd "<home>") 'beginning-of-line-text)

  (spacemacs/toggle-smartparens-globally-off)

  (remove-hook 'magit-refs-sections-hook 'magit-insert-tags)

  (setq-default
   evil-escape-delay 0.5
   projectile-enable-caching t
   projectile-git-submodule-command nil
   vc-handled-backends (delq 'Git vc-handled-backends)
   haskell-process-type 'cabal-repl
   )

  (keyfreq-mode 1)
  (keyfreq-autosave-mode 1)
  )
